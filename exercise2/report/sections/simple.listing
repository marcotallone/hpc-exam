function MPI_Parallel_qsort($\mathbf{X}^i$, P, comm):
    if P > 1:
        if rank == 0:
            $\tau \leftarrow$ choose_pivot($\mathbf{X}$)
            MPI_Bcast($\tau$, comm)

        $\mathbf{X}^{i}_{< \tau}, \mathbf{X}^{i}_{\geq \tau} \leftarrow$ partition($\mathbf{X}^{i}, \tau$)

        if rank $<$ P/2:
            MPI_Sendrecv($\mathbf{X}^{i}_{\geq \tau}$, $\mathbf{X}^{i+P/2}_{< \tau}$, comm)
        else:
            MPI_Sendrecv($\mathbf{X}^{i}_{< \tau}$, $\mathbf{X}^{i-P/2}_{\geq \tau}$, comm)

        MPI_Comm_split(comm, rank < P/2, low_comm)
        MPI_Comm_split(comm, rank >= P/2, high_comm)

        MPI_Parallel_qsort($\mathbf{X}^i$, P/2, low_comm)
        MPI_Parallel_qsort($\mathbf{X}^i$, P/2, high_comm)
    else:
        $\mathbf{X}_i$ $\leftarrow$ sort($\mathbf{X}_i$)

